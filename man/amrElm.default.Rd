% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/amrElm.R
\name{amrElm.default}
\alias{amrElm.default}
\title{AMR-ELM.}
\usage{
\method{amrElm}{default}(X, y, hidden_neurons, affinity = c("cosine", "none"))
}
\arguments{
\item{X}{training data, numerical with zero mean and unit variance and patterns in the lines, attributes in the columns}

\item{y}{training data labels (binary, -1 and +1)}

\item{hidden_neurons}{the number of hidden neurons}

\item{affinity}{- only cosine implemented}
}
\value{
the amrElm model for supervised problems, with:
         Z: hidden layer weights
         H: hidden layer output
         weights: output layer weights
         affinity: the affinity used to generate the model (e.g.: cosine affinity)
         dataTrain: training data for generating affinity matrix.
}
\description{
Creates a model for AMR-ELM.
}
\examples{

\dontrun{
library(amrElm)

data(heart)

data <- heart$data
labels <- heart$labels
n <- nrow(data)

split <- caTools::sample.split(labels, SplitRatio = 0.7)
train_data <- data[split == TRUE, ]
test_data <- data[split == FALSE, ]

train_labels <- labels[split == TRUE]
test_labels <- labels[split == FALSE]

model <- amrElm(train_data, train_labels, hidden_neurons = 500)
predicted_labels <- predict(model, test_data)
}
}
